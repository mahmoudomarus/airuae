generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model with authentication fields
model User {
  id            String    @id @default(uuid())
  email         String    @unique
  passwordHash  String?
  firstName     String?
  lastName      String?
  profileImage  String?
  phone         String?
  isVerified    Boolean   @default(false)
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations (to be expanded)
  properties    Property[]
  bookings      Booking[]
}

// Property model
model Property {
  id          String    @id @default(uuid())
  title       String
  description String?
  address     String
  city        String
  country     String
  zipCode     String?
  price       Float
  bedrooms    Int
  bathrooms   Int
  size        Float?
  images      String[]
  amenities   String[]
  available   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  owner       User      @relation(fields: [ownerId], references: [id])
  ownerId     String
  bookings    Booking[]
}

// Booking model
model Booking {
  id          String        @id @default(uuid())
  startDate   DateTime
  endDate     DateTime
  totalPrice  Float
  status      BookingStatus @default(PENDING)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  property    Property       @relation(fields: [propertyId], references: [id])
  propertyId  String
}

enum UserRole {
  USER
  AGENT
  LANDLORD
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
